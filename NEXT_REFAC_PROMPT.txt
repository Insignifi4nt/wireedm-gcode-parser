Next Refactor Session Prompt — Start Toolbar Split (FileControls, ViewControls, ActionControls)

Context
- Repo: WireEDM_app (Vite app). Entry: index.html → src/main.js.
- Branch: refactor (current working branch with GCodeDrawer PR1–PR5, Canvas PR1–PR5, EventManager PR0–PR9, and main PR0–PR8 completed).
- Build: `npm run build`; Dev: `npm run dev`.
- Coding style: `src/standards/CodingStandards.md` (ES modules, semicolons, 2‑space indent, named exports).
- Commit style: single descriptive commit per PR using multiple `-m` paragraphs (see AGENTS.md). Do not push; I’ll push.

What’s Done (So Far)
- GCodeDrawer refactor complete; drawer orchestrates Editor/Toolbar/Undo/Selection.
- Canvas refactor complete; Canvas composes CanvasGrid, PathHighlights, MarkerRenderer, CanvasRenderer.
- EventManager split into `core/events/*` with compatibility re‑exports. Build validated.
- main.js split complete; AppOrchestrator/ComponentInitializer/EventWiring in place; bootstrap slimmed; cleanup performed.

Goal (Next File)
- Refactor `src/components/Toolbar.js` (~619 lines in plan) into cohesive submodules:
  - `components/toolbar/FileControls.js` — File I/O controls
  - `components/toolbar/ViewControls.js` — Zoom/pan controls
  - `components/toolbar/ActionControls.js` — Utility and export actions

First Steps (Critical)
- Re‑evaluate Toolbar split plan and API boundaries:
  - Map responsibilities currently in `Toolbar.js` across file I/O, viewport controls, and utility/export actions.
  - Confirm EventBus events used/emit for FILE_*, VIEWPORT_*, GRID_*, EXPORT_*.
  - Draft scopes under `RefactoringFiles/Toolbar/` (00-scope.md and PRs/PR1–PRn) mirroring the established style.

Research Checklist
1) Skim `src/main.js` to annotate sections: initialization, DOM build, component init, event wiring, file operations, viewport controls, status flows.
2) Verify how `EventIntegration` plugs into mouse/touch/keyboard handlers and ensure its lifecycle is preserved.
3) Audit selectors and element IDs used during DOM creation (keep names stable for CSS/queries).
4) Review `Toolbar`, `Sidebar`, `GCodeDrawer`, `StatusMessage` constructors and their EventBus expectations.
5) Confirm no default import of `EventManager` is used; keep named imports stable.

Implementation Plan (Toolbar)
- PR0: Scaffold `components/toolbar` submodules and wiring points.
- PR1: Extract FileControls (file input, drag/drop hooks, validations) and delegate to FileHandler.
- PR2: Extract ViewControls (zoom in/out/reset/fit) and align with `EVENT_TYPES.VIEWPORT_*`.
- PR3: Extract ActionControls (clear points, export ISO/CSV) maintaining existing events and behavior.
- PR4: Delegate state updates (enabled/disabled) from Toolbar to submodules; keep Toolbar as orchestrator.
- PR5: Cleanup + docs; ensure public API and CSS hooks remain unchanged.

Notes
- No need to limit the number of PRs — use as many as needed for clean code and a successful refactor.
- Keep CSS classes/IDs and event type semantics unchanged to avoid UI/behavior regressions.
- Prefer named exports for new modules. Keep interfaces small and explicit.
- Avoid import churn for other components; only `main.js` should change its imports significantly.

Constraints
- Behavior parity: listener lifetimes, emit semantics, validation toggles, and UI flows remain identical.
- Stability: keep DOM structure (IDs/classes) and component contracts intact.
- Compatibility: `index.html` continues to load `src/main.js` as the app entry; no change to public surface.

Validation
- Build: `npm run build` after each PR; ensure it passes.
- Manual smoke: load file; drawer hover/click; add/delete/clear points; zoom/pan via controls and wheel; status messages; export flows; keyboard shortcuts; resize behavior.
- Performance: no duplicate listeners; no regressions in event throughput or initial load.

Commits
- One commit per PR with multi‑paragraph message:
  - git add -A && git commit \
    -m "refactor(main): PR1 extract DOM build to ComponentInitializer" \
    -m "- Add src/core/ComponentInitializer.js building header/main/sidebar/canvas; return DOM refs.\n+- Move DOM creation logic from src/main.js; preserve IDs/classes and layout.\n+- Behavior unchanged; build passes." \
    -m "Docs:\n- Add RefactoringFiles/main/PRs/PR1-ComponentInitializer.md with scope and verification steps." \
    -m "Refs: RefactoringFiles/main/PRs/PR1-ComponentInitializer.md"

Deliverable for first session
- Draft Toolbar scope and PR docs; extract FileControls (PR1) with behavior parity.
